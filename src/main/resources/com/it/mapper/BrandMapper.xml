<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    namespace:名称空间
-->

<mapper namespace="com.it.mapper.BrandMapper">
    <!--
        数据库表的字段名称（如:company_name） 和实体类的属性名称（如:companyName） 不一样，则不能自动封装
        解决方法：
                1.起别名，让别名和实体类的属性名一样
                2.
    -->

    <!--
    方法1:起别名
        缺点：每次查询都要定义依次别名
            解决办法：使用sql片段
                缺点：不灵活
    方法2：resultMap:
            1.定义<resultMap>标签
            2.在<select>标签中，使用resultMap属性替换 resultType属性
    -->
    <!--<select id="selectAll" resultType="brand">
        select id,brand_name as brandName,company_name as companyName,ordered,description,status
        from  tb_brand;
    </select>-->

    <!--
     id：唯一标识
     type:映射类型，支持别名
    -->
    <resultMap id="brandResultMap" type="brand">
        <!--
            id:完成主键字段的映射
                column:表的列名
                property：实体类的属性名
            result:完成一般字段的映射

        -->
        <result column="brand_name" property="brandName"/>
        <result column="company_name" property="companyName"/>
    </resultMap>

    <select id="selectAll" resultMap="brandResultMap">
        select * from  tb_brand;
    </select>

    <!--
        参数占位符：
            1.#{} :会将其替换为?,为了防止SQL注入
            2.${} : 拼sql。会存在SQL注入问题
    -->
    <!--根据id查询-->
    <select id="selectById" resultMap="brandResultMap">
        select * from tb_brand where id=#{id};
    </select>

    <!--多条件查询-->
    <!--<select id="selectByCondition" resultMap="brandResultMap">
        select *
        from tb_brand
        where status = #{status}
            and company_name like #{companyName}
            and brand_name like #{brandName}
    </select>-->

    <!--动态条件查询-->
    <select id="selectByCondition" resultMap="brandResultMap">
        select *
        from tb_brand
       <where>
           <if test="status != null">
               and status = #{status}
           </if>
           <if test="companyName != null and companyName != '' ">
               and company_name like #{companyName}
           </if>
           <if test="brandName != null and companyName != ''">
               and brand_name like #{brandName}
           </if>
       </where>



    </select>

</mapper>